{
  "name": "supertest-session",
  "version": "0.0.7",
  "description": "Cookie-based session persistence for Supertest",
  "main": "index.js",
  "scripts": {
    "lint": "./node_modules/jshint/bin/jshint .",
    "test": "npm run lint && ./node_modules/jasmine-node/bin/jasmine-node test",
    "cover": "./node_modules/istanbul/lib/cli.js cover ./node_modules/jasmine-node/bin/jasmine-node ./spec/ && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/rjz/supertest-session"
  },
  "keywords": [
    "supertest",
    "session",
    "cookie"
  ],
  "author": {
    "name": "RJ Zaworski",
    "email": "rj@rjzaworski.com"
  },
  "contributors": [
    {
      "name": "Chris Young",
      "email": "cyoung@mobiquityinc.com"
    }
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/rjz/supertest-session/issues"
  },
  "dependencies": {
    "cookie": "^0.1.2",
    "methods": "^1.1.0",
    "supertest": "^0.15.0"
  },
  "devDependencies": {
    "connect": "^3.2.0",
    "cookie-session": "^1.1.0",
    "coveralls": "^2.11.2",
    "express": "^4.9.5",
    "istanbul": "^0.3.0",
    "jasmine-node": "^1.14.5",
    "jshint": "^2.5.10",
    "through": "^2.3.6"
  },
  "readme": "# Supertest sessions\n\nSession wrapper around supertest.\n\n[![Build\nStatus](https://travis-ci.org/rjz/supertest-session.svg?branch=master)](https://travis-ci.org/rjz/supertest-session)\n[![Coverage\nStatus](https://coveralls.io/repos/rjz/supertest-session/badge.png)](https://coveralls.io/r/rjz/supertest-session)\n\nReferences:\n\n  * https://gist.github.com/joaoneto/5152248\n  * https://github.com/visionmedia/supertest/issues/46\n  * https://github.com/visionmedia/supertest/issues/26\n\n## Test\n\n    $ npm test\n\n## Usage\n\nRequire `supertest-session` and pass in the test application:\n\n    var Session = require('supertest-session')({\n      app: require('../../path/to/app')\n    });\n\nYou can set environmental variables by including an `envs` object:\n\n    var Session = require('supertest-session')({\n      app: require('../../path/to/app'),\n      envs: { NODE_ENV: 'development' }\n    });\n\nSet up a session:\n\n    before(function () {\n      this.sess = new Session();\n    });\n\n    after(function () {\n      this.sess.destroy();\n    });\n\nAnd set some expectations:\n\n    it('should fail accessing a restricted page', function (done) {\n      this.sess.get('/restricted')\n        .expect(401)\n        .end(done)\n    });\n\n    it('should sign in', function (done) {\n      this.sess.post('/signin')\n        .send({ username: 'foo', password: 'password' })\n        .expect(200)\n        .end(done);\n    });\n\n    it('should get a restricted page', function (done) {\n      this.sess.get('/restricted')\n        .expect(200)\n        .end(done)\n    });\n\n### Accessing session data\n\nThe cookies attached to the session may be retrieved from `session.cookies` at any time, for instance to inspect the contents of the current session in an external store.\n\n    it('should set session details correctly', function (done) {\n      var sessionCookie = _.find(sess.cookies, function (cookie) {\n        return _.has(cookie, 'connect.sid');\n      });\n\n      memcached.get(sessionCookie['connect.sid'], function (err, session) {\n        session.user.name.should.eq('Foobar');\n        done();\n      });\n    });\n\n### Request hooks\n\nBy default, supertest-session authenticates using session cookies. If your app\nuses a custom strategy to restore sessions, you can provide `before` and `after`\nhooks to adjust the request and inspect the response:\n\n    var Session = require('supertest-session')({\n      app: require('../../path/to/app'),\n      before: function (req) {\n        req.set('authorization', 'Basic aGVsbG86d29ybGQK');\n      }\n    });\n\n## License\n\nMIT\n\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/rjz/supertest-session",
  "_id": "supertest-session@0.0.7",
  "dist": {
    "shasum": "99ece082ef580e159118cf81f1058b15f6144a91"
  },
  "_from": "supertest-session@0.0.7",
  "_resolved": "https://registry.npmjs.org/supertest-session/-/supertest-session-0.0.7.tgz"
}
