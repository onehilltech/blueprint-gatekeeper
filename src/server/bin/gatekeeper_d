#!/usr/bin/env node

var nconf        = require ('nconf')
  , winston      = require ('winston')
  , path         = require ('path')
  , express      = require ('express')
  , validation   = require ('express-validator')
  , session      = require ('express-session')
  , bodyParser   = require ('body-parser')
  , passport     = require ('passport')
  , cookieParser = require ('cookie-parser')
  , morgan       = require ('morgan')
  ;

var config     = require ('../config')
  , MainRouter = require ('../lib/router')
  , Account    = require ('../lib/models/account')
  , db         = require ('../lib/db')
  ;

winston.info ('execution environment: ' + config.env);

// Define the serialization/deserialization methods. The serialization method
// just returns to user id. The deserialization method locates the account by
// the user id.
passport.serializeUser (function (user, done) {
  winston.info ('serializing user: %s', user.id);
  done (null, user.id);
});

passport.deserializeUser (function (id, done) {
  winston.info ('deserializing user: %s', id);

  Account.findById (id, function (err, user) {
    if (err)
      return done (err);

    if (!user)
      return done (new Error ('Account does not exist'));

    done (null, user);
  });
});

// Create a new server, and start it.
var app = express ();

// Set the template engine for the service.
app.set ('views', path.join (__dirname, '../views'));
app.set ('view engine', 'jade');

// Define the static routes.
app.use (morgan (config.env, config.morgan));
app.use (express.static (path.join (__dirname, '../public_html')));
app.use (cookieParser (config.cookieParser));
app.use (bodyParser.urlencoded ({ extended: false }));
app.use (bodyParser.json ());
app.use (validation ());

app.use (session (config.session));

app.use (passport.initialize ());
app.use (passport.session ());

// Define the dynamic routes.
app.use ('/', new MainRouter ().makeRouter ());

db.connect (config.connstr, config.mongodb, function (err) {
  if (err) return err;

  app.listen (config.port, function (err) {
    if (!err)
      winston.log ('info', 'listening on port', config.port);
  });
});
