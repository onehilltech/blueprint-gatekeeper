#!/usr/bin/env node
'use strict';

var winston   = require ('winston')
  , prompt    = require ('prompt')
  , blueprint = require ('@onehilltech/blueprint')
  , path      = require ('path')
  , async     = require ('async')
  , jsonfile  = require ('jsonfile')
  , fs        = require ('fs')
  ;

blueprint.Application (path.resolve (process.cwd (), 'app'));

var Client = require ('../app/models/Client')
  ;

// Make sure the ./data path exist for the output.
var dataPath = path.resolve (process.cwd (), 'data');

fs.stat (dataPath, function (err, stats) {
  if (err && err.code === 'ENOENT')
    fs.mkdirSync (dataPath);

  // Start getting input from the user.
  prompt.start ();

  async.waterfall ([
    function (callback) { blueprint.app.database.connect (callback); },
    function (callback) { prompt.get (['email'], callback) },

    // Create each of the clients in the database.
    function (result, callback) {
      var data = [
        {name: 'gatekeeper-cli', email: result.email, roles: ['account.create']},
        {name: 'gatekeeper-webportal', email: result.email, roles: ['account.create']}
      ];

      Client.create (data, callback);
    },

    function (clients, callback) {
      async.each (clients, function (client, callback) {
        var data = {
          client_id: client.id,
          client_secret: client.secret
        };

        var dataFile = path.join (process.cwd (), 'data', client.name);
        jsonfile.writeFile (dataFile, data, {spaces: 2}, callback);
      }, callback);
    }
  ], function (err) {
    if (err)
      winston.log ('error', err);

    process.exit (!err ? 0 : 1);
  });
});
